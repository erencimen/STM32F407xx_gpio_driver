
stm32f4xx_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000890  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a38  08000a40  00010a40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a38  08000a38  00010a40  2**0
                  CONTENTS
  4 .ARM          00000000  08000a38  08000a38  00010a40  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a38  08000a40  00010a40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a38  08000a38  00010a38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a3c  08000a3c  00010a3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000a40  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000a40  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010a40  2**0
                  CONTENTS, READONLY
 12 .debug_info   000011f4  00000000  00000000  00010a6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000330  00000000  00000000  00011c5e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000c8  00000000  00000000  00011f90  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000a0  00000000  00000000  00012058  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000021d7  00000000  00000000  000120f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000d0b  00000000  00000000  000142cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009b6a  00000000  00000000  00014fda  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001eb44  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0001ebc0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000a20 	.word	0x08000a20

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000a20 	.word	0x08000a20

080001e8 <Delay>:
#include <stdio.h>
#include <string.h>


void Delay(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	for(uint32_t i=0;i<500000;i++);
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <Delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a03      	ldr	r2, [pc, #12]	; (800020c <Delay+0x24>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <Delay+0xc>
}
 8000202:	bf00      	nop
 8000204:	370c      	adds	r7, #12
 8000206:	46bd      	mov	sp, r7
 8000208:	bc80      	pop	{r7}
 800020a:	4770      	bx	lr
 800020c:	0007a11f 	.word	0x0007a11f

08000210 <main>:



int main(void)
{
 8000210:	b580      	push	{r7, lr}
 8000212:	b086      	sub	sp, #24
 8000214:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIOLED;

	memset(&GPIOLED,0,sizeof(GPIOLED));
 8000216:	f107 030c 	add.w	r3, r7, #12
 800021a:	220c      	movs	r2, #12
 800021c:	2100      	movs	r1, #0
 800021e:	4618      	mov	r0, r3
 8000220:	f000 fbf6 	bl	8000a10 <memset>

	GPIOLED.pGPIOx = GPIOD;
 8000224:	4b1a      	ldr	r3, [pc, #104]	; (8000290 <main+0x80>)
 8000226:	60fb      	str	r3, [r7, #12]
	GPIOLED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000228:	230c      	movs	r3, #12
 800022a:	743b      	strb	r3, [r7, #16]
	GPIOLED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800022c:	2301      	movs	r3, #1
 800022e:	747b      	strb	r3, [r7, #17]
	GPIOLED.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000230:	2300      	movs	r3, #0
 8000232:	753b      	strb	r3, [r7, #20]
	GPIOLED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OP_SPEED_LOW;
 8000234:	2300      	movs	r3, #0
 8000236:	74bb      	strb	r3, [r7, #18]
	GPIOLED.GPIO_PinConfig.GPIO_PuPdControl = GPIO_NO_PUPD;
 8000238:	2300      	movs	r3, #0
 800023a:	74fb      	strb	r3, [r7, #19]

	GPIO_PCLK_Control(GPIOD, ENABLE);
 800023c:	2101      	movs	r1, #1
 800023e:	4814      	ldr	r0, [pc, #80]	; (8000290 <main+0x80>)
 8000240:	f000 f864 	bl	800030c <GPIO_PCLK_Control>

	GPIO_Init(&GPIOLED);
 8000244:	f107 030c 	add.w	r3, r7, #12
 8000248:	4618      	mov	r0, r3
 800024a:	f000 f947 	bl	80004dc <GPIO_Init>

	GPIO_Handle_t Button;

	memset(&Button,0,sizeof(Button));
 800024e:	463b      	mov	r3, r7
 8000250:	220c      	movs	r2, #12
 8000252:	2100      	movs	r1, #0
 8000254:	4618      	mov	r0, r3
 8000256:	f000 fbdb 	bl	8000a10 <memset>

	Button.pGPIOx = GPIOA;
 800025a:	4b0e      	ldr	r3, [pc, #56]	; (8000294 <main+0x84>)
 800025c:	603b      	str	r3, [r7, #0]
	Button.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 800025e:	2300      	movs	r3, #0
 8000260:	713b      	strb	r3, [r7, #4]
	Button.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000262:	2304      	movs	r3, #4
 8000264:	717b      	strb	r3, [r7, #5]
	Button.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OP_SPEED_LOW;
 8000266:	2300      	movs	r3, #0
 8000268:	71bb      	strb	r3, [r7, #6]
	Button.GPIO_PinConfig.GPIO_PuPdControl = GPIO_NO_PUPD;
 800026a:	2300      	movs	r3, #0
 800026c:	71fb      	strb	r3, [r7, #7]

	GPIO_PCLK_Control(GPIOA, ENABLE);
 800026e:	2101      	movs	r1, #1
 8000270:	4808      	ldr	r0, [pc, #32]	; (8000294 <main+0x84>)
 8000272:	f000 f84b 	bl	800030c <GPIO_PCLK_Control>

	GPIO_Init(&Button);
 8000276:	463b      	mov	r3, r7
 8000278:	4618      	mov	r0, r3
 800027a:	f000 f92f 	bl	80004dc <GPIO_Init>

	GPIO_IRQPriorityConfig(EXTI0_IRQn, NVIC_IRQ_PRI5);
 800027e:	2105      	movs	r1, #5
 8000280:	2006      	movs	r0, #6
 8000282:	f000 fb5d 	bl	8000940 <GPIO_IRQPriorityConfig>
	GPIO_IRQITConfig(EXTI0_IRQn, ENABLE);
 8000286:	2101      	movs	r1, #1
 8000288:	2006      	movs	r0, #6
 800028a:	f000 fad5 	bl	8000838 <GPIO_IRQITConfig>

	for(;;)
 800028e:	e7fe      	b.n	800028e <main+0x7e>
 8000290:	40020c00 	.word	0x40020c00
 8000294:	40020000 	.word	0x40020000

08000298 <EXTI0_IRQHandler>:
	}
}


void EXTI0_IRQHandler(void)
{
 8000298:	b580      	push	{r7, lr}
 800029a:	af00      	add	r7, sp, #0
	Delay();
 800029c:	f7ff ffa4 	bl	80001e8 <Delay>

	GPIO_IRQ_Handling(GPIO_PIN_NO_0);
 80002a0:	2000      	movs	r0, #0
 80002a2:	f000 fb71 	bl	8000988 <GPIO_IRQ_Handling>

	GPIO_Toggle_Pin(GPIOD, GPIO_PIN_NO_12);
 80002a6:	210c      	movs	r1, #12
 80002a8:	4802      	ldr	r0, [pc, #8]	; (80002b4 <EXTI0_IRQHandler+0x1c>)
 80002aa:	f000 fab1 	bl	8000810 <GPIO_Toggle_Pin>

}
 80002ae:	bf00      	nop
 80002b0:	bd80      	pop	{r7, pc}
 80002b2:	bf00      	nop
 80002b4:	40020c00 	.word	0x40020c00

080002b8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002b8:	480d      	ldr	r0, [pc, #52]	; (80002f0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ba:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002bc:	480d      	ldr	r0, [pc, #52]	; (80002f4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002be:	490e      	ldr	r1, [pc, #56]	; (80002f8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002c0:	4a0e      	ldr	r2, [pc, #56]	; (80002fc <LoopForever+0xe>)
  movs r3, #0
 80002c2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002c4:	e002      	b.n	80002cc <LoopCopyDataInit>

080002c6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002c6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002c8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ca:	3304      	adds	r3, #4

080002cc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002cc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ce:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002d0:	d3f9      	bcc.n	80002c6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002d2:	4a0b      	ldr	r2, [pc, #44]	; (8000300 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002d4:	4c0b      	ldr	r4, [pc, #44]	; (8000304 <LoopForever+0x16>)
  movs r3, #0
 80002d6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002d8:	e001      	b.n	80002de <LoopFillZerobss>

080002da <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002da:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002dc:	3204      	adds	r2, #4

080002de <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002de:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002e0:	d3fb      	bcc.n	80002da <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002e2:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80002e6:	f000 fb6f 	bl	80009c8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ea:	f7ff ff91 	bl	8000210 <main>

080002ee <LoopForever>:

LoopForever:
    b LoopForever
 80002ee:	e7fe      	b.n	80002ee <LoopForever>
  ldr   r0, =_estack
 80002f0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002f4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002f8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002fc:	08000a40 	.word	0x08000a40
  ldr r2, =_sbss
 8000300:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000304:	2000001c 	.word	0x2000001c

08000308 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000308:	e7fe      	b.n	8000308 <ADC_IRQHandler>
	...

0800030c <GPIO_PCLK_Control>:
 * @return			- None
 *
 * @Note			- None
 */
void GPIO_PCLK_Control(GPIO_TypeDef *pGPIOx,uint8_t EnorDi)
{
 800030c:	b480      	push	{r7}
 800030e:	b083      	sub	sp, #12
 8000310:	af00      	add	r7, sp, #0
 8000312:	6078      	str	r0, [r7, #4]
 8000314:	460b      	mov	r3, r1
 8000316:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000318:	78fb      	ldrb	r3, [r7, #3]
 800031a:	2b01      	cmp	r3, #1
 800031c:	d162      	bne.n	80003e4 <GPIO_PCLK_Control+0xd8>
	{
		if(pGPIOx == GPIOA)
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a64      	ldr	r2, [pc, #400]	; (80004b4 <GPIO_PCLK_Control+0x1a8>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d106      	bne.n	8000334 <GPIO_PCLK_Control+0x28>
		{
			GPIOA_PCLK_EN();
 8000326:	4b64      	ldr	r3, [pc, #400]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000328:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032a:	4a63      	ldr	r2, [pc, #396]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 800032c:	f043 0301 	orr.w	r3, r3, #1
 8000330:	6313      	str	r3, [r2, #48]	; 0x30
		{
			GPIOI_PCLK_DI();
		}

	}
}
 8000332:	e0b9      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOB)
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	4a61      	ldr	r2, [pc, #388]	; (80004bc <GPIO_PCLK_Control+0x1b0>)
 8000338:	4293      	cmp	r3, r2
 800033a:	d106      	bne.n	800034a <GPIO_PCLK_Control+0x3e>
			GPIOB_PCLK_EN();
 800033c:	4b5e      	ldr	r3, [pc, #376]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000340:	4a5d      	ldr	r2, [pc, #372]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000342:	f043 0302 	orr.w	r3, r3, #2
 8000346:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000348:	e0ae      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOC)
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a5c      	ldr	r2, [pc, #368]	; (80004c0 <GPIO_PCLK_Control+0x1b4>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d106      	bne.n	8000360 <GPIO_PCLK_Control+0x54>
			GPIOC_PCLK_EN();
 8000352:	4b59      	ldr	r3, [pc, #356]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000356:	4a58      	ldr	r2, [pc, #352]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000358:	f043 0304 	orr.w	r3, r3, #4
 800035c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035e:	e0a3      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOD)
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a58      	ldr	r2, [pc, #352]	; (80004c4 <GPIO_PCLK_Control+0x1b8>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d106      	bne.n	8000376 <GPIO_PCLK_Control+0x6a>
			GPIOD_PCLK_EN();
 8000368:	4b53      	ldr	r3, [pc, #332]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 800036a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036c:	4a52      	ldr	r2, [pc, #328]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 800036e:	f043 0308 	orr.w	r3, r3, #8
 8000372:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000374:	e098      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOE)
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	4a53      	ldr	r2, [pc, #332]	; (80004c8 <GPIO_PCLK_Control+0x1bc>)
 800037a:	4293      	cmp	r3, r2
 800037c:	d106      	bne.n	800038c <GPIO_PCLK_Control+0x80>
			GPIOE_PCLK_EN();
 800037e:	4b4e      	ldr	r3, [pc, #312]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000380:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000382:	4a4d      	ldr	r2, [pc, #308]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000384:	f043 0310 	orr.w	r3, r3, #16
 8000388:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038a:	e08d      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOF)
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	4a4f      	ldr	r2, [pc, #316]	; (80004cc <GPIO_PCLK_Control+0x1c0>)
 8000390:	4293      	cmp	r3, r2
 8000392:	d106      	bne.n	80003a2 <GPIO_PCLK_Control+0x96>
			GPIOF_PCLK_EN();
 8000394:	4b48      	ldr	r3, [pc, #288]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000396:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000398:	4a47      	ldr	r2, [pc, #284]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 800039a:	f043 0320 	orr.w	r3, r3, #32
 800039e:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a0:	e082      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOG)
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	4a4a      	ldr	r2, [pc, #296]	; (80004d0 <GPIO_PCLK_Control+0x1c4>)
 80003a6:	4293      	cmp	r3, r2
 80003a8:	d106      	bne.n	80003b8 <GPIO_PCLK_Control+0xac>
			GPIOG_PCLK_EN();
 80003aa:	4b43      	ldr	r3, [pc, #268]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 80003ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ae:	4a42      	ldr	r2, [pc, #264]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 80003b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003b4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b6:	e077      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOH)
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	4a46      	ldr	r2, [pc, #280]	; (80004d4 <GPIO_PCLK_Control+0x1c8>)
 80003bc:	4293      	cmp	r3, r2
 80003be:	d106      	bne.n	80003ce <GPIO_PCLK_Control+0xc2>
			GPIOH_PCLK_EN();
 80003c0:	4b3d      	ldr	r3, [pc, #244]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 80003c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c4:	4a3c      	ldr	r2, [pc, #240]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 80003c6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003ca:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003cc:	e06c      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOI)
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	4a41      	ldr	r2, [pc, #260]	; (80004d8 <GPIO_PCLK_Control+0x1cc>)
 80003d2:	4293      	cmp	r3, r2
 80003d4:	d168      	bne.n	80004a8 <GPIO_PCLK_Control+0x19c>
			GPIOI_PCLK_EN();
 80003d6:	4b38      	ldr	r3, [pc, #224]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 80003d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003da:	4a37      	ldr	r2, [pc, #220]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 80003dc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003e0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e2:	e061      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		if(pGPIOx == GPIOA)
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	4a33      	ldr	r2, [pc, #204]	; (80004b4 <GPIO_PCLK_Control+0x1a8>)
 80003e8:	4293      	cmp	r3, r2
 80003ea:	d106      	bne.n	80003fa <GPIO_PCLK_Control+0xee>
			GPIOA_PCLK_DI();
 80003ec:	4b32      	ldr	r3, [pc, #200]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 80003ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f0:	4a31      	ldr	r2, [pc, #196]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 80003f2:	f023 0301 	bic.w	r3, r3, #1
 80003f6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f8:	e056      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOB)
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4a2f      	ldr	r2, [pc, #188]	; (80004bc <GPIO_PCLK_Control+0x1b0>)
 80003fe:	4293      	cmp	r3, r2
 8000400:	d106      	bne.n	8000410 <GPIO_PCLK_Control+0x104>
			GPIOB_PCLK_DI();
 8000402:	4b2d      	ldr	r3, [pc, #180]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000404:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000406:	4a2c      	ldr	r2, [pc, #176]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000408:	f023 0302 	bic.w	r3, r3, #2
 800040c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800040e:	e04b      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOC)
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	4a2b      	ldr	r2, [pc, #172]	; (80004c0 <GPIO_PCLK_Control+0x1b4>)
 8000414:	4293      	cmp	r3, r2
 8000416:	d106      	bne.n	8000426 <GPIO_PCLK_Control+0x11a>
			GPIOC_PCLK_DI();
 8000418:	4b27      	ldr	r3, [pc, #156]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 800041a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041c:	4a26      	ldr	r2, [pc, #152]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 800041e:	f023 0304 	bic.w	r3, r3, #4
 8000422:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000424:	e040      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOD)
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	4a26      	ldr	r2, [pc, #152]	; (80004c4 <GPIO_PCLK_Control+0x1b8>)
 800042a:	4293      	cmp	r3, r2
 800042c:	d106      	bne.n	800043c <GPIO_PCLK_Control+0x130>
			GPIOD_PCLK_DI();
 800042e:	4b22      	ldr	r3, [pc, #136]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000430:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000432:	4a21      	ldr	r2, [pc, #132]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000434:	f023 0308 	bic.w	r3, r3, #8
 8000438:	6313      	str	r3, [r2, #48]	; 0x30
}
 800043a:	e035      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOE)
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	4a22      	ldr	r2, [pc, #136]	; (80004c8 <GPIO_PCLK_Control+0x1bc>)
 8000440:	4293      	cmp	r3, r2
 8000442:	d106      	bne.n	8000452 <GPIO_PCLK_Control+0x146>
			GPIOE_PCLK_DI();
 8000444:	4b1c      	ldr	r3, [pc, #112]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000446:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000448:	4a1b      	ldr	r2, [pc, #108]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 800044a:	f023 0310 	bic.w	r3, r3, #16
 800044e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000450:	e02a      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOF)
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	4a1d      	ldr	r2, [pc, #116]	; (80004cc <GPIO_PCLK_Control+0x1c0>)
 8000456:	4293      	cmp	r3, r2
 8000458:	d106      	bne.n	8000468 <GPIO_PCLK_Control+0x15c>
			GPIOF_PCLK_DI();
 800045a:	4b17      	ldr	r3, [pc, #92]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 800045c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800045e:	4a16      	ldr	r2, [pc, #88]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000460:	f023 0320 	bic.w	r3, r3, #32
 8000464:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000466:	e01f      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOG)
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	4a19      	ldr	r2, [pc, #100]	; (80004d0 <GPIO_PCLK_Control+0x1c4>)
 800046c:	4293      	cmp	r3, r2
 800046e:	d106      	bne.n	800047e <GPIO_PCLK_Control+0x172>
			GPIOG_PCLK_DI();
 8000470:	4b11      	ldr	r3, [pc, #68]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000472:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000474:	4a10      	ldr	r2, [pc, #64]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000476:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800047a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800047c:	e014      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOH)
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	4a14      	ldr	r2, [pc, #80]	; (80004d4 <GPIO_PCLK_Control+0x1c8>)
 8000482:	4293      	cmp	r3, r2
 8000484:	d106      	bne.n	8000494 <GPIO_PCLK_Control+0x188>
			GPIOH_PCLK_DI();
 8000486:	4b0c      	ldr	r3, [pc, #48]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 8000488:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800048a:	4a0b      	ldr	r2, [pc, #44]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 800048c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000490:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000492:	e009      	b.n	80004a8 <GPIO_PCLK_Control+0x19c>
		else if(pGPIOx ==GPIOI)
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	4a10      	ldr	r2, [pc, #64]	; (80004d8 <GPIO_PCLK_Control+0x1cc>)
 8000498:	4293      	cmp	r3, r2
 800049a:	d105      	bne.n	80004a8 <GPIO_PCLK_Control+0x19c>
			GPIOI_PCLK_DI();
 800049c:	4b06      	ldr	r3, [pc, #24]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 800049e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004a0:	4a05      	ldr	r2, [pc, #20]	; (80004b8 <GPIO_PCLK_Control+0x1ac>)
 80004a2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80004a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004a8:	bf00      	nop
 80004aa:	370c      	adds	r7, #12
 80004ac:	46bd      	mov	sp, r7
 80004ae:	bc80      	pop	{r7}
 80004b0:	4770      	bx	lr
 80004b2:	bf00      	nop
 80004b4:	40020000 	.word	0x40020000
 80004b8:	40023800 	.word	0x40023800
 80004bc:	40020400 	.word	0x40020400
 80004c0:	40020800 	.word	0x40020800
 80004c4:	40020c00 	.word	0x40020c00
 80004c8:	40021000 	.word	0x40021000
 80004cc:	40021400 	.word	0x40021400
 80004d0:	40021800 	.word	0x40021800
 80004d4:	40021c00 	.word	0x40021c00
 80004d8:	40022000 	.word	0x40022000

080004dc <GPIO_Init>:
 * @return			- None
 *
 * @Note			- None
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80004dc:	b480      	push	{r7}
 80004de:	b087      	sub	sp, #28
 80004e0:	af00      	add	r7, sp, #0
 80004e2:	6078      	str	r0, [r7, #4]

	uint32_t temp =0;
 80004e4:	2300      	movs	r3, #0
 80004e6:	617b      	str	r3, [r7, #20]

	//GPIO pin mode configuration
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	795b      	ldrb	r3, [r3, #5]
 80004ec:	2b03      	cmp	r3, #3
 80004ee:	d821      	bhi.n	8000534 <GPIO_Init+0x58>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	795b      	ldrb	r3, [r3, #5]
 80004f4:	461a      	mov	r2, r3
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	791b      	ldrb	r3, [r3, #4]
 80004fa:	005b      	lsls	r3, r3, #1
 80004fc:	fa02 f303 	lsl.w	r3, r2, r3
 8000500:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );	//Clearing
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	681a      	ldr	r2, [r3, #0]
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	791b      	ldrb	r3, [r3, #4]
 800050c:	4619      	mov	r1, r3
 800050e:	2303      	movs	r3, #3
 8000510:	408b      	lsls	r3, r1
 8000512:	43db      	mvns	r3, r3
 8000514:	4619      	mov	r1, r3
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	400a      	ands	r2, r1
 800051c:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;		//Setting
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	6819      	ldr	r1, [r3, #0]
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	697a      	ldr	r2, [r7, #20]
 800052a:	430a      	orrs	r2, r1
 800052c:	601a      	str	r2, [r3, #0]
		temp=0;
 800052e:	2300      	movs	r3, #0
 8000530:	617b      	str	r3, [r7, #20]
 8000532:	e0c3      	b.n	80006bc <GPIO_Init+0x1e0>
	}
	else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	795b      	ldrb	r3, [r3, #5]
 8000538:	2b04      	cmp	r3, #4
 800053a:	d117      	bne.n	800056c <GPIO_Init+0x90>
		{
			//Set corresponding FTSR bit
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800053c:	4b47      	ldr	r3, [pc, #284]	; (800065c <GPIO_Init+0x180>)
 800053e:	68db      	ldr	r3, [r3, #12]
 8000540:	687a      	ldr	r2, [r7, #4]
 8000542:	7912      	ldrb	r2, [r2, #4]
 8000544:	4611      	mov	r1, r2
 8000546:	2201      	movs	r2, #1
 8000548:	408a      	lsls	r2, r1
 800054a:	4611      	mov	r1, r2
 800054c:	4a43      	ldr	r2, [pc, #268]	; (800065c <GPIO_Init+0x180>)
 800054e:	430b      	orrs	r3, r1
 8000550:	60d3      	str	r3, [r2, #12]
			//Clear corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000552:	4b42      	ldr	r3, [pc, #264]	; (800065c <GPIO_Init+0x180>)
 8000554:	689b      	ldr	r3, [r3, #8]
 8000556:	687a      	ldr	r2, [r7, #4]
 8000558:	7912      	ldrb	r2, [r2, #4]
 800055a:	4611      	mov	r1, r2
 800055c:	2201      	movs	r2, #1
 800055e:	408a      	lsls	r2, r1
 8000560:	43d2      	mvns	r2, r2
 8000562:	4611      	mov	r1, r2
 8000564:	4a3d      	ldr	r2, [pc, #244]	; (800065c <GPIO_Init+0x180>)
 8000566:	400b      	ands	r3, r1
 8000568:	6093      	str	r3, [r2, #8]
 800056a:	e035      	b.n	80005d8 <GPIO_Init+0xfc>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	795b      	ldrb	r3, [r3, #5]
 8000570:	2b05      	cmp	r3, #5
 8000572:	d117      	bne.n	80005a4 <GPIO_Init+0xc8>
		{
			//Set corresponding RTSR bit
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000574:	4b39      	ldr	r3, [pc, #228]	; (800065c <GPIO_Init+0x180>)
 8000576:	689b      	ldr	r3, [r3, #8]
 8000578:	687a      	ldr	r2, [r7, #4]
 800057a:	7912      	ldrb	r2, [r2, #4]
 800057c:	4611      	mov	r1, r2
 800057e:	2201      	movs	r2, #1
 8000580:	408a      	lsls	r2, r1
 8000582:	4611      	mov	r1, r2
 8000584:	4a35      	ldr	r2, [pc, #212]	; (800065c <GPIO_Init+0x180>)
 8000586:	430b      	orrs	r3, r1
 8000588:	6093      	str	r3, [r2, #8]
			//Clear corresponding FTSR bit
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800058a:	4b34      	ldr	r3, [pc, #208]	; (800065c <GPIO_Init+0x180>)
 800058c:	68db      	ldr	r3, [r3, #12]
 800058e:	687a      	ldr	r2, [r7, #4]
 8000590:	7912      	ldrb	r2, [r2, #4]
 8000592:	4611      	mov	r1, r2
 8000594:	2201      	movs	r2, #1
 8000596:	408a      	lsls	r2, r1
 8000598:	43d2      	mvns	r2, r2
 800059a:	4611      	mov	r1, r2
 800059c:	4a2f      	ldr	r2, [pc, #188]	; (800065c <GPIO_Init+0x180>)
 800059e:	400b      	ands	r3, r1
 80005a0:	60d3      	str	r3, [r2, #12]
 80005a2:	e019      	b.n	80005d8 <GPIO_Init+0xfc>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	795b      	ldrb	r3, [r3, #5]
 80005a8:	2b06      	cmp	r3, #6
 80005aa:	d115      	bne.n	80005d8 <GPIO_Init+0xfc>
		{
			//Set corresponding FTSR and RTSR bits
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005ac:	4b2b      	ldr	r3, [pc, #172]	; (800065c <GPIO_Init+0x180>)
 80005ae:	68db      	ldr	r3, [r3, #12]
 80005b0:	687a      	ldr	r2, [r7, #4]
 80005b2:	7912      	ldrb	r2, [r2, #4]
 80005b4:	4611      	mov	r1, r2
 80005b6:	2201      	movs	r2, #1
 80005b8:	408a      	lsls	r2, r1
 80005ba:	4611      	mov	r1, r2
 80005bc:	4a27      	ldr	r2, [pc, #156]	; (800065c <GPIO_Init+0x180>)
 80005be:	430b      	orrs	r3, r1
 80005c0:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005c2:	4b26      	ldr	r3, [pc, #152]	; (800065c <GPIO_Init+0x180>)
 80005c4:	689b      	ldr	r3, [r3, #8]
 80005c6:	687a      	ldr	r2, [r7, #4]
 80005c8:	7912      	ldrb	r2, [r2, #4]
 80005ca:	4611      	mov	r1, r2
 80005cc:	2201      	movs	r2, #1
 80005ce:	408a      	lsls	r2, r1
 80005d0:	4611      	mov	r1, r2
 80005d2:	4a22      	ldr	r2, [pc, #136]	; (800065c <GPIO_Init+0x180>)
 80005d4:	430b      	orrs	r3, r1
 80005d6:	6093      	str	r3, [r2, #8]
		}

		uint32_t temp1,temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	791b      	ldrb	r3, [r3, #4]
 80005dc:	089b      	lsrs	r3, r3, #2
 80005de:	b2db      	uxtb	r3, r3
 80005e0:	613b      	str	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	791b      	ldrb	r3, [r3, #4]
 80005e6:	f003 0303 	and.w	r3, r3, #3
 80005ea:	60fb      	str	r3, [r7, #12]

		//Get port code for given GPIOx
		uint8_t PORTCODE =GPIO_BASE_TO_PORTCODE(pGPIOHandle->pGPIOx);
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	4a1b      	ldr	r2, [pc, #108]	; (8000660 <GPIO_Init+0x184>)
 80005f2:	4293      	cmp	r3, r2
 80005f4:	d044      	beq.n	8000680 <GPIO_Init+0x1a4>
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	681b      	ldr	r3, [r3, #0]
 80005fa:	4a1a      	ldr	r2, [pc, #104]	; (8000664 <GPIO_Init+0x188>)
 80005fc:	4293      	cmp	r3, r2
 80005fe:	d02b      	beq.n	8000658 <GPIO_Init+0x17c>
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	4a18      	ldr	r2, [pc, #96]	; (8000668 <GPIO_Init+0x18c>)
 8000606:	4293      	cmp	r3, r2
 8000608:	d024      	beq.n	8000654 <GPIO_Init+0x178>
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	681b      	ldr	r3, [r3, #0]
 800060e:	4a17      	ldr	r2, [pc, #92]	; (800066c <GPIO_Init+0x190>)
 8000610:	4293      	cmp	r3, r2
 8000612:	d01d      	beq.n	8000650 <GPIO_Init+0x174>
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	4a15      	ldr	r2, [pc, #84]	; (8000670 <GPIO_Init+0x194>)
 800061a:	4293      	cmp	r3, r2
 800061c:	d016      	beq.n	800064c <GPIO_Init+0x170>
 800061e:	687b      	ldr	r3, [r7, #4]
 8000620:	681b      	ldr	r3, [r3, #0]
 8000622:	4a14      	ldr	r2, [pc, #80]	; (8000674 <GPIO_Init+0x198>)
 8000624:	4293      	cmp	r3, r2
 8000626:	d00f      	beq.n	8000648 <GPIO_Init+0x16c>
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	681b      	ldr	r3, [r3, #0]
 800062c:	4a12      	ldr	r2, [pc, #72]	; (8000678 <GPIO_Init+0x19c>)
 800062e:	4293      	cmp	r3, r2
 8000630:	d008      	beq.n	8000644 <GPIO_Init+0x168>
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	681b      	ldr	r3, [r3, #0]
 8000636:	4a11      	ldr	r2, [pc, #68]	; (800067c <GPIO_Init+0x1a0>)
 8000638:	4293      	cmp	r3, r2
 800063a:	d101      	bne.n	8000640 <GPIO_Init+0x164>
 800063c:	2307      	movs	r3, #7
 800063e:	e020      	b.n	8000682 <GPIO_Init+0x1a6>
 8000640:	2300      	movs	r3, #0
 8000642:	e01e      	b.n	8000682 <GPIO_Init+0x1a6>
 8000644:	2306      	movs	r3, #6
 8000646:	e01c      	b.n	8000682 <GPIO_Init+0x1a6>
 8000648:	2305      	movs	r3, #5
 800064a:	e01a      	b.n	8000682 <GPIO_Init+0x1a6>
 800064c:	2304      	movs	r3, #4
 800064e:	e018      	b.n	8000682 <GPIO_Init+0x1a6>
 8000650:	2303      	movs	r3, #3
 8000652:	e016      	b.n	8000682 <GPIO_Init+0x1a6>
 8000654:	2302      	movs	r3, #2
 8000656:	e014      	b.n	8000682 <GPIO_Init+0x1a6>
 8000658:	2301      	movs	r3, #1
 800065a:	e012      	b.n	8000682 <GPIO_Init+0x1a6>
 800065c:	40013c00 	.word	0x40013c00
 8000660:	40020000 	.word	0x40020000
 8000664:	40020400 	.word	0x40020400
 8000668:	40020800 	.word	0x40020800
 800066c:	40020c00 	.word	0x40020c00
 8000670:	40021000 	.word	0x40021000
 8000674:	40021400 	.word	0x40021400
 8000678:	40021800 	.word	0x40021800
 800067c:	40022000 	.word	0x40022000
 8000680:	2300      	movs	r3, #0
 8000682:	72fb      	strb	r3, [r7, #11]

		//Enable the Clock for SYSCFG
		SYSCFG_PCLK_EN();
 8000684:	4b5f      	ldr	r3, [pc, #380]	; (8000804 <GPIO_Init+0x328>)
 8000686:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000688:	4a5e      	ldr	r2, [pc, #376]	; (8000804 <GPIO_Init+0x328>)
 800068a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800068e:	6453      	str	r3, [r2, #68]	; 0x44

		//Set source input for the EXTIx
		SYSCFG->EXTICR[temp1] = PORTCODE << (temp2 * 4);
 8000690:	7afa      	ldrb	r2, [r7, #11]
 8000692:	68fb      	ldr	r3, [r7, #12]
 8000694:	009b      	lsls	r3, r3, #2
 8000696:	fa02 f303 	lsl.w	r3, r2, r3
 800069a:	4a5b      	ldr	r2, [pc, #364]	; (8000808 <GPIO_Init+0x32c>)
 800069c:	4619      	mov	r1, r3
 800069e:	693b      	ldr	r3, [r7, #16]
 80006a0:	3302      	adds	r3, #2
 80006a2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//Enable the EXTI Interrupt delivery using IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80006a6:	4b59      	ldr	r3, [pc, #356]	; (800080c <GPIO_Init+0x330>)
 80006a8:	681b      	ldr	r3, [r3, #0]
 80006aa:	687a      	ldr	r2, [r7, #4]
 80006ac:	7912      	ldrb	r2, [r2, #4]
 80006ae:	4611      	mov	r1, r2
 80006b0:	2201      	movs	r2, #1
 80006b2:	408a      	lsls	r2, r1
 80006b4:	4611      	mov	r1, r2
 80006b6:	4a55      	ldr	r2, [pc, #340]	; (800080c <GPIO_Init+0x330>)
 80006b8:	430b      	orrs	r3, r1
 80006ba:	6013      	str	r3, [r2, #0]


	}

	//GPIO pin output speed configuration
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	799b      	ldrb	r3, [r3, #6]
 80006c0:	461a      	mov	r2, r3
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	791b      	ldrb	r3, [r3, #4]
 80006c6:	005b      	lsls	r3, r3, #1
 80006c8:	fa02 f303 	lsl.w	r3, r2, r3
 80006cc:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );	//Clearing
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	681b      	ldr	r3, [r3, #0]
 80006d2:	689a      	ldr	r2, [r3, #8]
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	791b      	ldrb	r3, [r3, #4]
 80006d8:	4619      	mov	r1, r3
 80006da:	2303      	movs	r3, #3
 80006dc:	408b      	lsls	r3, r1
 80006de:	43db      	mvns	r3, r3
 80006e0:	4619      	mov	r1, r3
 80006e2:	687b      	ldr	r3, [r7, #4]
 80006e4:	681b      	ldr	r3, [r3, #0]
 80006e6:	400a      	ands	r2, r1
 80006e8:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;	//Setting
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	681b      	ldr	r3, [r3, #0]
 80006ee:	6899      	ldr	r1, [r3, #8]
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	681b      	ldr	r3, [r3, #0]
 80006f4:	697a      	ldr	r2, [r7, #20]
 80006f6:	430a      	orrs	r2, r1
 80006f8:	609a      	str	r2, [r3, #8]
	temp =0;
 80006fa:	2300      	movs	r3, #0
 80006fc:	617b      	str	r3, [r7, #20]

	//GPIO pull-up pull-down configuration
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PuPdControl <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006fe:	687b      	ldr	r3, [r7, #4]
 8000700:	79db      	ldrb	r3, [r3, #7]
 8000702:	461a      	mov	r2, r3
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	791b      	ldrb	r3, [r3, #4]
 8000708:	005b      	lsls	r3, r3, #1
 800070a:	fa02 f303 	lsl.w	r3, r2, r3
 800070e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );	//Clearing
 8000710:	687b      	ldr	r3, [r7, #4]
 8000712:	681b      	ldr	r3, [r3, #0]
 8000714:	68da      	ldr	r2, [r3, #12]
 8000716:	687b      	ldr	r3, [r7, #4]
 8000718:	791b      	ldrb	r3, [r3, #4]
 800071a:	4619      	mov	r1, r3
 800071c:	2303      	movs	r3, #3
 800071e:	408b      	lsls	r3, r1
 8000720:	43db      	mvns	r3, r3
 8000722:	4619      	mov	r1, r3
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	400a      	ands	r2, r1
 800072a:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;		//Setting
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	681b      	ldr	r3, [r3, #0]
 8000730:	68d9      	ldr	r1, [r3, #12]
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	681b      	ldr	r3, [r3, #0]
 8000736:	697a      	ldr	r2, [r7, #20]
 8000738:	430a      	orrs	r2, r1
 800073a:	60da      	str	r2, [r3, #12]
	temp =0;
 800073c:	2300      	movs	r3, #0
 800073e:	617b      	str	r3, [r7, #20]

	//GPIO output type configuration
	//Output Type Mode register set only when GPIO Mode is out
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_OUT)
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	795b      	ldrb	r3, [r3, #5]
 8000744:	2b01      	cmp	r3, #1
 8000746:	d11f      	bne.n	8000788 <GPIO_Init+0x2ac>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	7a1b      	ldrb	r3, [r3, #8]
 800074c:	461a      	mov	r2, r3
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	791b      	ldrb	r3, [r3, #4]
 8000752:	fa02 f303 	lsl.w	r3, r2, r3
 8000756:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );	//Clearing
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	681b      	ldr	r3, [r3, #0]
 800075c:	685a      	ldr	r2, [r3, #4]
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	791b      	ldrb	r3, [r3, #4]
 8000762:	4619      	mov	r1, r3
 8000764:	2301      	movs	r3, #1
 8000766:	408b      	lsls	r3, r1
 8000768:	43db      	mvns	r3, r3
 800076a:	4619      	mov	r1, r3
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	400a      	ands	r2, r1
 8000772:	605a      	str	r2, [r3, #4]
		pGPIOHandle->pGPIOx->OTYPER |= temp;	//Setting
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	681b      	ldr	r3, [r3, #0]
 8000778:	6859      	ldr	r1, [r3, #4]
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	681b      	ldr	r3, [r3, #0]
 800077e:	697a      	ldr	r2, [r7, #20]
 8000780:	430a      	orrs	r2, r1
 8000782:	605a      	str	r2, [r3, #4]
		temp =0;
 8000784:	2300      	movs	r3, #0
 8000786:	617b      	str	r3, [r7, #20]
	}

	//GPIO alternate function mode configuration
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_AF)
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	795b      	ldrb	r3, [r3, #5]
 800078c:	2b02      	cmp	r3, #2
 800078e:	d134      	bne.n	80007fa <GPIO_Init+0x31e>
	{
		uint8_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	791b      	ldrb	r3, [r3, #4]
 8000794:	08db      	lsrs	r3, r3, #3
 8000796:	72bb      	strb	r3, [r7, #10]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	791b      	ldrb	r3, [r3, #4]
 800079c:	f003 0307 	and.w	r3, r3, #7
 80007a0:	727b      	strb	r3, [r7, #9]

		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	7a5b      	ldrb	r3, [r3, #9]
 80007a6:	461a      	mov	r2, r3
 80007a8:	7a7b      	ldrb	r3, [r7, #9]
 80007aa:	009b      	lsls	r3, r3, #2
 80007ac:	fa02 f303 	lsl.w	r3, r2, r3
 80007b0:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~((0xF) << 4*temp2);
 80007b2:	687b      	ldr	r3, [r7, #4]
 80007b4:	681b      	ldr	r3, [r3, #0]
 80007b6:	7aba      	ldrb	r2, [r7, #10]
 80007b8:	3208      	adds	r2, #8
 80007ba:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007be:	7a7b      	ldrb	r3, [r7, #9]
 80007c0:	009b      	lsls	r3, r3, #2
 80007c2:	220f      	movs	r2, #15
 80007c4:	fa02 f303 	lsl.w	r3, r2, r3
 80007c8:	43db      	mvns	r3, r3
 80007ca:	4618      	mov	r0, r3
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	681b      	ldr	r3, [r3, #0]
 80007d0:	7aba      	ldrb	r2, [r7, #10]
 80007d2:	4001      	ands	r1, r0
 80007d4:	3208      	adds	r2, #8
 80007d6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= temp;
 80007da:	687b      	ldr	r3, [r7, #4]
 80007dc:	681b      	ldr	r3, [r3, #0]
 80007de:	7aba      	ldrb	r2, [r7, #10]
 80007e0:	3208      	adds	r2, #8
 80007e2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80007e6:	687b      	ldr	r3, [r7, #4]
 80007e8:	681b      	ldr	r3, [r3, #0]
 80007ea:	7aba      	ldrb	r2, [r7, #10]
 80007ec:	6979      	ldr	r1, [r7, #20]
 80007ee:	4301      	orrs	r1, r0
 80007f0:	3208      	adds	r2, #8
 80007f2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		temp =0;
 80007f6:	2300      	movs	r3, #0
 80007f8:	617b      	str	r3, [r7, #20]
	}

}
 80007fa:	bf00      	nop
 80007fc:	371c      	adds	r7, #28
 80007fe:	46bd      	mov	sp, r7
 8000800:	bc80      	pop	{r7}
 8000802:	4770      	bx	lr
 8000804:	40023800 	.word	0x40023800
 8000808:	40013800 	.word	0x40013800
 800080c:	40013c00 	.word	0x40013c00

08000810 <GPIO_Toggle_Pin>:
 * @return			- None
 *
 * @Note			- None
 */
void GPIO_Toggle_Pin(GPIO_TypeDef *pGPIOx,uint8_t GPIO_PinNumber)
{
 8000810:	b480      	push	{r7}
 8000812:	b083      	sub	sp, #12
 8000814:	af00      	add	r7, sp, #0
 8000816:	6078      	str	r0, [r7, #4]
 8000818:	460b      	mov	r3, r1
 800081a:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (0x1 << GPIO_PinNumber);
 800081c:	687b      	ldr	r3, [r7, #4]
 800081e:	695b      	ldr	r3, [r3, #20]
 8000820:	78fa      	ldrb	r2, [r7, #3]
 8000822:	2101      	movs	r1, #1
 8000824:	fa01 f202 	lsl.w	r2, r1, r2
 8000828:	405a      	eors	r2, r3
 800082a:	687b      	ldr	r3, [r7, #4]
 800082c:	615a      	str	r2, [r3, #20]
}
 800082e:	bf00      	nop
 8000830:	370c      	adds	r7, #12
 8000832:	46bd      	mov	sp, r7
 8000834:	bc80      	pop	{r7}
 8000836:	4770      	bx	lr

08000838 <GPIO_IRQITConfig>:
 * @return			- None
 *
 * @Note			- None
 */
void GPIO_IRQITConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000838:	b480      	push	{r7}
 800083a:	b083      	sub	sp, #12
 800083c:	af00      	add	r7, sp, #0
 800083e:	4603      	mov	r3, r0
 8000840:	460a      	mov	r2, r1
 8000842:	71fb      	strb	r3, [r7, #7]
 8000844:	4613      	mov	r3, r2
 8000846:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 8000848:	79bb      	ldrb	r3, [r7, #6]
 800084a:	2b01      	cmp	r3, #1
 800084c:	d133      	bne.n	80008b6 <GPIO_IRQITConfig+0x7e>
	{
		if(IRQNumber <= 31)
 800084e:	79fb      	ldrb	r3, [r7, #7]
 8000850:	2b1f      	cmp	r3, #31
 8000852:	d80a      	bhi.n	800086a <GPIO_IRQITConfig+0x32>
		{
			*NVIC_ISER0 |= (1 << IRQNumber);
 8000854:	4b34      	ldr	r3, [pc, #208]	; (8000928 <GPIO_IRQITConfig+0xf0>)
 8000856:	681b      	ldr	r3, [r3, #0]
 8000858:	79fa      	ldrb	r2, [r7, #7]
 800085a:	2101      	movs	r1, #1
 800085c:	fa01 f202 	lsl.w	r2, r1, r2
 8000860:	4611      	mov	r1, r2
 8000862:	4a31      	ldr	r2, [pc, #196]	; (8000928 <GPIO_IRQITConfig+0xf0>)
 8000864:	430b      	orrs	r3, r1
 8000866:	6013      	str	r3, [r2, #0]
		else if(IRQNumber>63 && IRQNumber <96)
		{
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
		}
	}
}
 8000868:	e059      	b.n	800091e <GPIO_IRQITConfig+0xe6>
		else if(IRQNumber>31 && IRQNumber <= 63)
 800086a:	79fb      	ldrb	r3, [r7, #7]
 800086c:	2b1f      	cmp	r3, #31
 800086e:	d90f      	bls.n	8000890 <GPIO_IRQITConfig+0x58>
 8000870:	79fb      	ldrb	r3, [r7, #7]
 8000872:	2b3f      	cmp	r3, #63	; 0x3f
 8000874:	d80c      	bhi.n	8000890 <GPIO_IRQITConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 8000876:	4b2d      	ldr	r3, [pc, #180]	; (800092c <GPIO_IRQITConfig+0xf4>)
 8000878:	681b      	ldr	r3, [r3, #0]
 800087a:	79fa      	ldrb	r2, [r7, #7]
 800087c:	f002 021f 	and.w	r2, r2, #31
 8000880:	2101      	movs	r1, #1
 8000882:	fa01 f202 	lsl.w	r2, r1, r2
 8000886:	4611      	mov	r1, r2
 8000888:	4a28      	ldr	r2, [pc, #160]	; (800092c <GPIO_IRQITConfig+0xf4>)
 800088a:	430b      	orrs	r3, r1
 800088c:	6013      	str	r3, [r2, #0]
 800088e:	e046      	b.n	800091e <GPIO_IRQITConfig+0xe6>
		else if(IRQNumber>63 && IRQNumber <96)
 8000890:	79fb      	ldrb	r3, [r7, #7]
 8000892:	2b3f      	cmp	r3, #63	; 0x3f
 8000894:	d943      	bls.n	800091e <GPIO_IRQITConfig+0xe6>
 8000896:	79fb      	ldrb	r3, [r7, #7]
 8000898:	2b5f      	cmp	r3, #95	; 0x5f
 800089a:	d840      	bhi.n	800091e <GPIO_IRQITConfig+0xe6>
			*NVIC_ISER2 |= (1 << (IRQNumber % 64));
 800089c:	4b24      	ldr	r3, [pc, #144]	; (8000930 <GPIO_IRQITConfig+0xf8>)
 800089e:	681b      	ldr	r3, [r3, #0]
 80008a0:	79fa      	ldrb	r2, [r7, #7]
 80008a2:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008a6:	2101      	movs	r1, #1
 80008a8:	fa01 f202 	lsl.w	r2, r1, r2
 80008ac:	4611      	mov	r1, r2
 80008ae:	4a20      	ldr	r2, [pc, #128]	; (8000930 <GPIO_IRQITConfig+0xf8>)
 80008b0:	430b      	orrs	r3, r1
 80008b2:	6013      	str	r3, [r2, #0]
}
 80008b4:	e033      	b.n	800091e <GPIO_IRQITConfig+0xe6>
		if(IRQNumber <= 31)
 80008b6:	79fb      	ldrb	r3, [r7, #7]
 80008b8:	2b1f      	cmp	r3, #31
 80008ba:	d80a      	bhi.n	80008d2 <GPIO_IRQITConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 80008bc:	4b1d      	ldr	r3, [pc, #116]	; (8000934 <GPIO_IRQITConfig+0xfc>)
 80008be:	681b      	ldr	r3, [r3, #0]
 80008c0:	79fa      	ldrb	r2, [r7, #7]
 80008c2:	2101      	movs	r1, #1
 80008c4:	fa01 f202 	lsl.w	r2, r1, r2
 80008c8:	4611      	mov	r1, r2
 80008ca:	4a1a      	ldr	r2, [pc, #104]	; (8000934 <GPIO_IRQITConfig+0xfc>)
 80008cc:	430b      	orrs	r3, r1
 80008ce:	6013      	str	r3, [r2, #0]
}
 80008d0:	e025      	b.n	800091e <GPIO_IRQITConfig+0xe6>
		else if(IRQNumber>31 && IRQNumber <= 63)
 80008d2:	79fb      	ldrb	r3, [r7, #7]
 80008d4:	2b1f      	cmp	r3, #31
 80008d6:	d90f      	bls.n	80008f8 <GPIO_IRQITConfig+0xc0>
 80008d8:	79fb      	ldrb	r3, [r7, #7]
 80008da:	2b3f      	cmp	r3, #63	; 0x3f
 80008dc:	d80c      	bhi.n	80008f8 <GPIO_IRQITConfig+0xc0>
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
 80008de:	4b16      	ldr	r3, [pc, #88]	; (8000938 <GPIO_IRQITConfig+0x100>)
 80008e0:	681b      	ldr	r3, [r3, #0]
 80008e2:	79fa      	ldrb	r2, [r7, #7]
 80008e4:	f002 021f 	and.w	r2, r2, #31
 80008e8:	2101      	movs	r1, #1
 80008ea:	fa01 f202 	lsl.w	r2, r1, r2
 80008ee:	4611      	mov	r1, r2
 80008f0:	4a11      	ldr	r2, [pc, #68]	; (8000938 <GPIO_IRQITConfig+0x100>)
 80008f2:	430b      	orrs	r3, r1
 80008f4:	6013      	str	r3, [r2, #0]
 80008f6:	e012      	b.n	800091e <GPIO_IRQITConfig+0xe6>
		else if(IRQNumber>63 && IRQNumber <96)
 80008f8:	79fb      	ldrb	r3, [r7, #7]
 80008fa:	2b3f      	cmp	r3, #63	; 0x3f
 80008fc:	d90f      	bls.n	800091e <GPIO_IRQITConfig+0xe6>
 80008fe:	79fb      	ldrb	r3, [r7, #7]
 8000900:	2b5f      	cmp	r3, #95	; 0x5f
 8000902:	d80c      	bhi.n	800091e <GPIO_IRQITConfig+0xe6>
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
 8000904:	4b0d      	ldr	r3, [pc, #52]	; (800093c <GPIO_IRQITConfig+0x104>)
 8000906:	681b      	ldr	r3, [r3, #0]
 8000908:	79fa      	ldrb	r2, [r7, #7]
 800090a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800090e:	2101      	movs	r1, #1
 8000910:	fa01 f202 	lsl.w	r2, r1, r2
 8000914:	4611      	mov	r1, r2
 8000916:	4a09      	ldr	r2, [pc, #36]	; (800093c <GPIO_IRQITConfig+0x104>)
 8000918:	430b      	orrs	r3, r1
 800091a:	6013      	str	r3, [r2, #0]
}
 800091c:	e7ff      	b.n	800091e <GPIO_IRQITConfig+0xe6>
 800091e:	bf00      	nop
 8000920:	370c      	adds	r7, #12
 8000922:	46bd      	mov	sp, r7
 8000924:	bc80      	pop	{r7}
 8000926:	4770      	bx	lr
 8000928:	e000e100 	.word	0xe000e100
 800092c:	e000e104 	.word	0xe000e104
 8000930:	e000e108 	.word	0xe000e108
 8000934:	e000e180 	.word	0xe000e180
 8000938:	e000e184 	.word	0xe000e184
 800093c:	e000e188 	.word	0xe000e188

08000940 <GPIO_IRQPriorityConfig>:
 *
 * @Note			- None
 */

void GPIO_IRQPriorityConfig(uint8_t IRQNumber ,uint8_t IRQPriority)
{
 8000940:	b480      	push	{r7}
 8000942:	b085      	sub	sp, #20
 8000944:	af00      	add	r7, sp, #0
 8000946:	4603      	mov	r3, r0
 8000948:	460a      	mov	r2, r1
 800094a:	71fb      	strb	r3, [r7, #7]
 800094c:	4613      	mov	r3, r2
 800094e:	71bb      	strb	r3, [r7, #6]
	uint8_t iprx = IRQNumber / 4;
 8000950:	79fb      	ldrb	r3, [r7, #7]
 8000952:	089b      	lsrs	r3, r3, #2
 8000954:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 8000956:	79fb      	ldrb	r3, [r7, #7]
 8000958:	f003 0303 	and.w	r3, r3, #3
 800095c:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 800095e:	7bbb      	ldrb	r3, [r7, #14]
 8000960:	00db      	lsls	r3, r3, #3
 8000962:	b2db      	uxtb	r3, r3
 8000964:	3304      	adds	r3, #4
 8000966:	737b      	strb	r3, [r7, #13]

	*(NVIC_IPR0_BASE + (iprx *4)) = (IRQPriority << shift_amount);
 8000968:	79ba      	ldrb	r2, [r7, #6]
 800096a:	7b7b      	ldrb	r3, [r7, #13]
 800096c:	409a      	lsls	r2, r3
 800096e:	7bfb      	ldrb	r3, [r7, #15]
 8000970:	011b      	lsls	r3, r3, #4
 8000972:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000976:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 800097a:	601a      	str	r2, [r3, #0]
}
 800097c:	bf00      	nop
 800097e:	3714      	adds	r7, #20
 8000980:	46bd      	mov	sp, r7
 8000982:	bc80      	pop	{r7}
 8000984:	4770      	bx	lr
	...

08000988 <GPIO_IRQ_Handling>:
 * @return			- None
 *
 * @Note			- None
 */
void GPIO_IRQ_Handling(uint8_t GPIO_PinNumber)
{
 8000988:	b480      	push	{r7}
 800098a:	b083      	sub	sp, #12
 800098c:	af00      	add	r7, sp, #0
 800098e:	4603      	mov	r3, r0
 8000990:	71fb      	strb	r3, [r7, #7]
	//Clear the EXTI PR Register corresponding to the pin number
	if(EXTI->PR & (1 << GPIO_PinNumber))
 8000992:	4b0c      	ldr	r3, [pc, #48]	; (80009c4 <GPIO_IRQ_Handling+0x3c>)
 8000994:	695b      	ldr	r3, [r3, #20]
 8000996:	79fa      	ldrb	r2, [r7, #7]
 8000998:	2101      	movs	r1, #1
 800099a:	fa01 f202 	lsl.w	r2, r1, r2
 800099e:	4013      	ands	r3, r2
 80009a0:	2b00      	cmp	r3, #0
 80009a2:	d009      	beq.n	80009b8 <GPIO_IRQ_Handling+0x30>
	{
		EXTI->PR |= (1 << GPIO_PinNumber); //This bit is cleared by programming it to ‘1’
 80009a4:	4b07      	ldr	r3, [pc, #28]	; (80009c4 <GPIO_IRQ_Handling+0x3c>)
 80009a6:	695b      	ldr	r3, [r3, #20]
 80009a8:	79fa      	ldrb	r2, [r7, #7]
 80009aa:	2101      	movs	r1, #1
 80009ac:	fa01 f202 	lsl.w	r2, r1, r2
 80009b0:	4611      	mov	r1, r2
 80009b2:	4a04      	ldr	r2, [pc, #16]	; (80009c4 <GPIO_IRQ_Handling+0x3c>)
 80009b4:	430b      	orrs	r3, r1
 80009b6:	6153      	str	r3, [r2, #20]
	}
}
 80009b8:	bf00      	nop
 80009ba:	370c      	adds	r7, #12
 80009bc:	46bd      	mov	sp, r7
 80009be:	bc80      	pop	{r7}
 80009c0:	4770      	bx	lr
 80009c2:	bf00      	nop
 80009c4:	40013c00 	.word	0x40013c00

080009c8 <__libc_init_array>:
 80009c8:	b570      	push	{r4, r5, r6, lr}
 80009ca:	4e0d      	ldr	r6, [pc, #52]	; (8000a00 <__libc_init_array+0x38>)
 80009cc:	4c0d      	ldr	r4, [pc, #52]	; (8000a04 <__libc_init_array+0x3c>)
 80009ce:	1ba4      	subs	r4, r4, r6
 80009d0:	10a4      	asrs	r4, r4, #2
 80009d2:	2500      	movs	r5, #0
 80009d4:	42a5      	cmp	r5, r4
 80009d6:	d109      	bne.n	80009ec <__libc_init_array+0x24>
 80009d8:	4e0b      	ldr	r6, [pc, #44]	; (8000a08 <__libc_init_array+0x40>)
 80009da:	4c0c      	ldr	r4, [pc, #48]	; (8000a0c <__libc_init_array+0x44>)
 80009dc:	f000 f820 	bl	8000a20 <_init>
 80009e0:	1ba4      	subs	r4, r4, r6
 80009e2:	10a4      	asrs	r4, r4, #2
 80009e4:	2500      	movs	r5, #0
 80009e6:	42a5      	cmp	r5, r4
 80009e8:	d105      	bne.n	80009f6 <__libc_init_array+0x2e>
 80009ea:	bd70      	pop	{r4, r5, r6, pc}
 80009ec:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80009f0:	4798      	blx	r3
 80009f2:	3501      	adds	r5, #1
 80009f4:	e7ee      	b.n	80009d4 <__libc_init_array+0xc>
 80009f6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80009fa:	4798      	blx	r3
 80009fc:	3501      	adds	r5, #1
 80009fe:	e7f2      	b.n	80009e6 <__libc_init_array+0x1e>
 8000a00:	08000a38 	.word	0x08000a38
 8000a04:	08000a38 	.word	0x08000a38
 8000a08:	08000a38 	.word	0x08000a38
 8000a0c:	08000a3c 	.word	0x08000a3c

08000a10 <memset>:
 8000a10:	4402      	add	r2, r0
 8000a12:	4603      	mov	r3, r0
 8000a14:	4293      	cmp	r3, r2
 8000a16:	d100      	bne.n	8000a1a <memset+0xa>
 8000a18:	4770      	bx	lr
 8000a1a:	f803 1b01 	strb.w	r1, [r3], #1
 8000a1e:	e7f9      	b.n	8000a14 <memset+0x4>

08000a20 <_init>:
 8000a20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a22:	bf00      	nop
 8000a24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a26:	bc08      	pop	{r3}
 8000a28:	469e      	mov	lr, r3
 8000a2a:	4770      	bx	lr

08000a2c <_fini>:
 8000a2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a2e:	bf00      	nop
 8000a30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a32:	bc08      	pop	{r3}
 8000a34:	469e      	mov	lr, r3
 8000a36:	4770      	bx	lr
